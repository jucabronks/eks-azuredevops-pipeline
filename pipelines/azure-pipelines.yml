# Azure DevOps Pipeline para EKS
trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Ajuste para seu repositório ECR
  ECR_REPO: '<seu_ecr_repo>'
  IMAGE_TAG: '$(Build.BuildId)'
  AWS_REGION: 'us-east-1'
  CLUSTER_NAME: '<seu_eks_cluster>'
  K8S_NAMESPACE: 'default'

stages:
  - stage: BuildAndPush
    jobs:
      - job: Build
        steps:
          - checkout: self
          - task: Docker@2
            displayName: Build Docker image
            inputs:
              command: build
              Dockerfile: app/Dockerfile
              tags: $(ECR_REPO):$(IMAGE_TAG)
          - task: ECRPushImage@1
            displayName: Push to ECR
            inputs:
              awsCredentials: '<seu_service_connection>'
              regionName: $(AWS_REGION)
              imageSource: 'imageid'
              sourceImageId: $(ECR_REPO):$(IMAGE_TAG)
              repositoryName: $(ECR_REPO)
              pushTag: $(IMAGE_TAG)

  - stage: Deploy
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy
        steps:
          - checkout: self
          - task: UseAWSCLI@1
            inputs:
              awsCredentials: '<seu_service_connection>'
              regionName: $(AWS_REGION)
          - script: |
              aws eks update-kubeconfig --region $(AWS_REGION) --name $(CLUSTER_NAME)
            displayName: Configure kubectl
          - script: |
              kubectl apply -f k8s/deployment.yaml
              kubectl apply -f k8s/service.yaml
              kubectl apply -f k8s/ingress-nginx.yaml
              kubectl apply -f k8s/ingress-alb.yaml
            displayName: Deploy app e ingressos
          - script: |
              helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
              helm repo add grafana https://grafana.github.io/helm-charts
              helm repo add datadog https://helm.datadoghq.com
              helm repo update
              helm upgrade --install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
              helm upgrade --install grafana grafana/grafana --namespace monitoring --create-namespace
              helm upgrade --install datadog datadog/datadog --set datadog.apiKey=<seu_datadog_api_key> --set datadog.site=datadoghq.com --namespace monitoring --create-namespace
            displayName: Instalar Prometheus, Grafana e Datadog
          - script: |
              kubectl rollout status deployment/eks-azuredevops-app --timeout=60s || \
              kubectl rollout undo deployment/eks-azuredevops-app
            displayName: 'Verificar rollout e fazer rollback se necessário' 